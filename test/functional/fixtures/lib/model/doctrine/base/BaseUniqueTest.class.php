<?php

/**
 * ##COPYRIGHT PLACEHOLDER##
 */

/**

 * BaseUniqueTest
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property string $unique_test1
 * @property string $unique_test2
 * @property string $unique_test3
 * @property string $unique_test4
 * @property string $id
 *
 * @method string     getUniqueTest1($load = true) Returns the current record's "unique_test1" value
 * @method string     getUniqueTest2($load = true) Returns the current record's "unique_test2" value
 * @method string     getUniqueTest3($load = true) Returns the current record's "unique_test3" value
 * @method string     getUniqueTest4($load = true) Returns the current record's "unique_test4" value
 * @method string     getId($load = true) Returns the current record's "id" value
 * @method UniqueTest setUniqueTest1($value, $load = true) Sets the current record's "unique_test1" value
 * @method UniqueTest setUniqueTest2($value, $load = true) Sets the current record's "unique_test2" value
 * @method UniqueTest setUniqueTest3($value, $load = true) Sets the current record's "unique_test3" value
 * @method UniqueTest setUniqueTest4($value, $load = true) Sets the current record's "unique_test4" value
 * @method UniqueTest setId($value, $load = true) Sets the current record's "id" value
 *
 */
abstract class BaseUniqueTest extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('unique_test');
        $this->hasColumn('unique_test1', 'string', 255, array(
            'type' => 'string',
            'unique' => true,
            'length' => 255,
        ));
        $this->hasColumn('unique_test2', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
        ));
        $this->hasColumn('unique_test3', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
        ));
        $this->hasColumn('unique_test4', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
        ));

        $this->index('unique_test', array(
            'fields' =>
            array(
                0 => 'unique_test1',
                1 => 'unique_test2',
            ),
            'type' => 'unique',
        ));
        $this->index('unique_test2', array(
            'fields' =>
            array(
                'unique_test4' =>
                array(
                    'sorting' => 'ASC',
                    'length' => '10',
                ),
            ),
            'type' => 'unique',
        ));
    }

    public function setUp()
    {
        parent::setUp();

    }

}
